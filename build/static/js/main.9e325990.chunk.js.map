{"version":3,"sources":["lib/commerce.js","assets/cherub.png","components/Navbar/styles.js","components/Navbar/Navbar.jsx","components/Products/Product/styles.js","components/Products/Product/Product.jsx","components/Products/styles.js","components/Products/Products.jsx","components/Cart/styles.js","components/Cart/CartItem/styles.js","components/Cart/CartItem/CartItem.jsx","components/Cart/Cart.jsx","components/CheckoutForm/Checkout/styles.js","components/CheckoutForm/FormInput.jsx","components/CheckoutForm/AddressForm.jsx","components/CheckoutForm/Checkout/Review.jsx","components/CheckoutForm/PaymentForm.jsx","components/CheckoutForm/Checkout/Checkout.jsx","App.js","assets/comp1.mp4","index.js"],"names":["commerce","Commerce","process","makeStyles","theme","appBar","boxShadow","borderBottom","breakpoints","up","width","marginLeft","title","flexGrow","alignItems","display","textDecoration","fontFamily","fontWeight","fontSize","letterSpacing","image","marginRight","menuButton","spacing","grow","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","searchIcon","padding","height","pointerEvents","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Navbar","totalItems","classes","useStyles","location","useLocation","AppBar","className","Toolbar","Typography","component","Link","to","variant","pathname","button","IconButton","Badge","badgeContent","ShoppingCart","root","maxWidth","media","paddingTop","cardActions","cardContent","Product","product","onAddToCart","Card","CardMedia","source","name","CardContent","gutterBottom","formatted_with_symbol","price","dangerouslySetInnerHTML","__html","description","CardActions","disableSpacing","onClick","id","AddShoppingCart","toolbar","mixins","content","background","default","Products","products","Grid","container","justify","map","item","xs","sm","md","lg","marginTop","emptyButton","minWidth","down","marginBottom","checkoutButton","link","cardDetails","cartActions","buttons","CartItem","onUpdateCartQuantity","onRemoveFromCart","alt","line_total","Button","type","size","quantity","Cart","cart","handleUpdateCartQuantity","handleRemoveFromCart","handleEmptyCart","EmptyCart","FilledCart","line_items","subtotal","Container","length","layout","paper","stepper","divider","margin","spinner","FormInput","label","control","useFormContext","as","TextField","defaultValue","fullWidth","required","AddressForm","checkoutToken","next","useState","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","useForm","countries","Object","entries","subdivisions","options","sO","fetchShippingCountries","checkoutTokenId","a","services","localeListShippingCountries","keys","fetchSubdivisions","countryCode","localeListSubdivisions","fetchShippingOptions","country","stateProvince","checkout","getShippingOptions","region","useEffect","onSubmit","handleSubmit","data","InputLabel","Select","value","onChange","e","target","MenuItem","subdivision","option","style","Review","List","disablePadding","live","ListItem","ListItemText","primary","secondary","stripePromise","loadStripe","PaymentForm","shippingData","backStep","onCaptureCheckout","nextStep","timeout","event","elements","stripe","preventDefault","getElement","CardElement","cardElement","createPaymentMethod","card","error","paymentMethod","console","log","orderData","customer","firstname","firstName","lastname","lastName","email","shipping","street","address1","town_city","city","county_state","postal_zip_code","zip","fulfillment","shipping_method","payment","gateway","payment_method_id","Divider","disabled","steps","Checkout","order","activeStep","setActiveStep","setCheckoutToken","setShippingData","isFinished","setIsFinished","history","useHistory","generateToken","token","push","previousActiveStep","setTimeout","Confirmation","customer_reference","CircularProgress","Form","CssBaseline","Paper","align","Stepper","step","Step","StepLabel","App","setProducts","setCart","setOrder","errorMessage","setErrorMessage","fetchProducts","list","fetchCart","retrieve","handleAddToCart","productId","add","update","remove","empty","refreshCart","refresh","newCart","handleCaptureCheckout","newOrder","capture","incomingOrder","message","total_items","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e325990.chunk.js","sourcesContent":["import Commerce from '@chec/commerce.js'\r\n\r\nexport const commerce = new Commerce(\r\n    process.env.REACT_APP_CHEC_PUBLIC_KEY,\r\n    true\r\n)\r\n","export default __webpack_public_path__ + \"static/media/cherub.8956b58f.png\";","import { makeStyles, alpha } from '@material-ui/core/styles'\r\n\r\nconst drawerWidth = 0\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n        boxShadow: 'none',\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        textDecoration: 'none',\r\n        fontFamily: 'Bon Foyage',\r\n        fontWeight: 'bolder',\r\n        fontSize: '36px',\r\n        letterSpacing: '1px',\r\n    },\r\n    image: {\r\n        marginRight: '10px',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n}))\r\n","import React from 'react'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Badge,\r\n    MenuItem,\r\n    Menu,\r\n    Typography,\r\n} from '@material-ui/core'\r\nimport { ShoppingCart } from '@material-ui/icons'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nimport logo from '../../assets/cherub.png'\r\nimport useStyles from './styles'\r\n\r\nconst Navbar = ({ totalItems }) => {\r\n    const classes = useStyles()\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <>\r\n            <AppBar position='fixed' className={classes.appBar} color='inherit'>\r\n                <Toolbar>\r\n                    <Typography\r\n                        component={Link}\r\n                        to='/'\r\n                        variant='h6'\r\n                        className={classes.title}\r\n                        color='inherit'\r\n                    >\r\n                        {/* <img\r\n                            src={logo}\r\n                            alt=\"Cherub Syrups\"\r\n                            height=\"50px\"\r\n                            className={classes.image}\r\n                        /> */}\r\n                        cherub syrups\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === '/' && ( // only show cart if location pathname is home => aka not the cart\r\n                        <div className={classes.button}>\r\n                            <IconButton\r\n                                component={Link}\r\n                                to='/cart'\r\n                                aria-label='Show cart items'\r\n                                color='inherit'\r\n                            >\r\n                                <Badge\r\n                                    badgeContent={totalItems}\r\n                                    color='secondary'\r\n                                >\r\n                                    <ShoppingCart />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles(() => ({\r\n    root: {\r\n        maxWidth: '100%',\r\n    },\r\n    media: {\r\n        height: '0',\r\n        paddingTop: '56.25%',\r\n    },\r\n    cardActions: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    cardContent: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n}))\r\n","import React from 'react'\r\nimport {\r\n    Card,\r\n    CardMedia,\r\n    CardContent,\r\n    CardActions,\r\n    Typography,\r\n    IconButton,\r\n} from '@material-ui/core'\r\nimport { AddShoppingCart } from '@material-ui/icons'\r\n\r\nimport useStyles from './styles'\r\n\r\nconst Product = ({ product, onAddToCart }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={product.media.source}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography className={classes.cardContent}>\r\n                    <Typography variant=\"h5\" gutterBottom>\r\n                        {product.name}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                        {product.formatted_with_symbol}\r\n                    </Typography>\r\n                    {product.price.formatted_with_symbol}\r\n                </Typography>\r\n                <Typography\r\n                    dangerouslySetInnerHTML={{ __html: product.description }}\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                />\r\n            </CardContent>\r\n            <CardActions disableSpacing className={classes.cardActions}>\r\n                <IconButton\r\n                    aria-label=\"Add to Cart\"\r\n                    onClick={() => onAddToCart(product.id, 1)}\r\n                >\r\n                    <AddShoppingCart />\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}))\r\n","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport Product from './Product/Product'\r\nimport useStyles from './styles'\r\n\r\nconst Products = ({ products, onAddToCart }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            <Grid container justify=\"center\" spacing={4}>\r\n                {products.map((product) => (\r\n                    <Grid item key={product.id} xs={12} sm={6} md={4} lg={3}>\r\n                        <Product product={product} onAddToCart={onAddToCart} />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    title: {\r\n        marginTop: '5%',\r\n    },\r\n    emptyButton: {\r\n        minWidth: '150px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginBottom: '5px',\r\n        },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginRight: '20px',\r\n        },\r\n    },\r\n    checkoutButton: {\r\n        minWidth: '150px',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    },\r\n    cardDetails: {\r\n        display: 'flex',\r\n        marginTop: '10%',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n    },\r\n}))\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles(() => ({\r\n    media: {\r\n        height: 260,\r\n    },\r\n    cardContent: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    cartActions: {\r\n        justifyContent: 'space-between',\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}))\r\n","import React from 'react'\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n} from '@material-ui/core'\r\n\r\nimport useStyles from './styles'\r\n\r\n// im prop drilling right now so I need to use react context!!!! ==============================\r\nconst CartItem = ({ item, onUpdateCartQuantity, onRemoveFromCart }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card>\r\n            <CardMedia\r\n                image={item.media.source}\r\n                alt={item.name}\r\n                className={classes.media}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <Typography variant=\"h4\">{item.name}</Typography>\r\n                <Typography variant=\"h5\">\r\n                    {item.line_total.formatted_with_symbol}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <div className={classes.buttons}>\r\n                    <Button\r\n                        type=\"button\"\r\n                        size=\"small\"\r\n                        onClick={() =>\r\n                            onUpdateCartQuantity(item.id, item.quantity - 1)\r\n                        }\r\n                    >\r\n                        -\r\n                    </Button>\r\n                    <Typography>{item.quantity}</Typography>\r\n                    <Button\r\n                        type=\"button\"\r\n                        size=\"small\"\r\n                        onClick={() =>\r\n                            onUpdateCartQuantity(item.id, item.quantity + 1)\r\n                        }\r\n                    >\r\n                        +\r\n                    </Button>\r\n                </div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    onClick={() => onRemoveFromCart(item.id)}\r\n                >\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","import React from 'react'\r\nimport { Container, Typography, Button, Grid } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport useStyles from './styles'\r\nimport CartItem from './CartItem/CartItem'\r\n\r\nconst Cart = ({\r\n    cart,\r\n    handleUpdateCartQuantity,\r\n    handleRemoveFromCart,\r\n    handleEmptyCart,\r\n}) => {\r\n    const classes = useStyles()\r\n\r\n    const EmptyCart = () => (\r\n        <Typography variant=\"subtitle1\">\r\n            No items in the cart!\r\n            <Link to=\"/\" className={classes.link}>\r\n                ...Go add some\r\n            </Link>\r\n            !\r\n        </Typography>\r\n    )\r\n\r\n    const FilledCart = () => (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                {cart.line_items.map((item) => (\r\n                    <Grid item xs={12} sm={4} key={item.id}>\r\n                        <CartItem\r\n                            item={item}\r\n                            onUpdateCartQuantity={handleUpdateCartQuantity}\r\n                            onRemoveFromCart={handleRemoveFromCart}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <div className={classes.cardDetails}>\r\n                <Typography variant=\"h4\">\r\n                    Subtotal: {cart.subtotal.formatted_with_symbol}\r\n                </Typography>\r\n                <div>\r\n                    <Button\r\n                        className={classes.emptyButton}\r\n                        size=\"large\"\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={handleEmptyCart}\r\n                    >\r\n                        Empty Cart\r\n                    </Button>\r\n                    <Button\r\n                        component={Link}\r\n                        to=\"/checkout\"\r\n                        className={classes.checkoutButton}\r\n                        size=\"large\"\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Checkout\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    if (!cart.line_items) return 'Loading...'\r\n\r\n    return (\r\n        <Container>\r\n            <div className={classes.toolbar} />\r\n            <Typography className={classes.title} variant=\"h3\" gutterBottom>\r\n                Your Shopping Cart\r\n            </Typography>\r\n            {/* if empty is 0 then !0 is true. else if number then false and the cart is full */}\r\n            {!cart.line_items.length ? <EmptyCart /> : <FilledCart />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    layout: {\r\n        marginTop: '5%',\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%',\r\n            marginTop: 60,\r\n        },\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    divider: {\r\n        margin: '20px 0',\r\n    },\r\n    spinner: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n}))\r\n","import React from 'react'\r\nimport { TextField, Grid } from '@material-ui/core'\r\nimport { useFormContext, Controller } from 'react-hook-form' // had to install earlier version of react-hook-form: 6.2.0\r\n\r\nconst FormInput = ({ name, label }) => {\r\n    const { control } = useFormContext()\r\n    return (\r\n        <Grid item xs={12} sm={6}>\r\n            <Controller\r\n                as={TextField}\r\n                defaultValue=\"\"\r\n                control={control}\r\n                fullWidth\r\n                name={name}\r\n                label={label}\r\n                required\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Button,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core'\r\nimport { useForm, FormProvider } from 'react-hook-form'\r\n\r\nimport { commerce } from '../../lib/commerce'\r\n\r\nimport FormInput from './FormInput'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([])\r\n    const [shippingCountry, setShippingCountry] = useState('')\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([])\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('')\r\n    const [shippingOptions, setShippingOptions] = useState([])\r\n    const [shippingOption, setShippingOption] = useState('')\r\n\r\n    const methods = useForm()\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n        id: code,\r\n        label: name,\r\n    }))\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(\r\n        ([code, name]) => ({\r\n            id: code,\r\n            label: name,\r\n        })\r\n    )\r\n\r\n    const options = shippingOptions.map((sO) => ({\r\n        id: sO.id,\r\n        label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\r\n    }))\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } =\r\n            await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n\r\n        setShippingCountries(countries)\r\n        setShippingCountry(Object.keys(countries)[0])\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n            countryCode\r\n        )\r\n\r\n        setShippingSubdivisions(subdivisions)\r\n        setShippingSubdivision(Object.keys(subdivisions)[0])\r\n    }\r\n\r\n    const fetchShippingOptions = async (\r\n        checkoutTokenId,\r\n        country,\r\n        stateProvince = null\r\n    ) => {\r\n        const options = await commerce.checkout.getShippingOptions(\r\n            checkoutTokenId,\r\n            { country, region: stateProvince }\r\n        )\r\n\r\n        setShippingOptions(options)\r\n        setShippingOption(options[0].id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, [checkoutToken.id])\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry)\r\n    }, [shippingCountry])\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision)\r\n            fetchShippingOptions(\r\n                checkoutToken.id,\r\n                shippingCountry,\r\n                shippingSubdivision\r\n            )\r\n    }, [checkoutToken.id, shippingCountry, shippingSubdivision])\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping Address\r\n            </Typography>\r\n            <FormProvider {...methods}>\r\n                <form\r\n                    onSubmit={methods.handleSubmit((data) =>\r\n                        next({\r\n                            ...data,\r\n                            shippingCountry,\r\n                            shippingSubdivision,\r\n                            shippingOption,\r\n                        })\r\n                    )}\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <FormInput\r\n                            required\r\n                            name=\"firstName\"\r\n                            label=\"First Name\"\r\n                        />\r\n                        <FormInput name=\"lastName\" label=\"Last Name\" />\r\n                        <FormInput name=\"address1\" label=\"Address\" />\r\n                        <FormInput name=\"email\" label=\"Email\" />\r\n                        <FormInput name=\"city\" label=\"City\" />\r\n                        <FormInput name=\"zip\" label=\"Zip Code\" />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select\r\n                                value={shippingCountry}\r\n                                fullWidth\r\n                                onChange={(e) =>\r\n                                    setShippingCountry(e.target.value)\r\n                                }\r\n                            >\r\n                                {countries.map((country) => (\r\n                                    <MenuItem\r\n                                        key={country.id}\r\n                                        value={country.id}\r\n                                    >\r\n                                        {country.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select\r\n                                value={shippingSubdivision}\r\n                                fullWidth\r\n                                onChange={(e) =>\r\n                                    setShippingSubdivision(e.target.value)\r\n                                }\r\n                            >\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem\r\n                                        key={subdivision.id}\r\n                                        value={subdivision.id}\r\n                                    >\r\n                                        {subdivision.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select\r\n                                value={shippingOption}\r\n                                fullWidth\r\n                                onChange={(e) =>\r\n                                    setShippingOption(e.target.value)\r\n                                }\r\n                            >\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                        }}\r\n                    >\r\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">\r\n                            Back to Cart\r\n                        </Button>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primarys\"\r\n                        >\r\n                            Next\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n","import React from 'react'\r\nimport { Typography, List, ListItem, ListItemText } from '@material-ui/core'\r\n\r\n// more prop drilling => implement useContext later!\r\nconst Review = ({ checkoutToken }) => {\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Order Summary\r\n            </Typography>\r\n            <List disablePadding>\r\n                {checkoutToken.live.line_items.map((product) => (\r\n                    <ListItem style={{ padding: '10px 0' }} key={product.name}>\r\n                        <ListItemText\r\n                            primary={product.name}\r\n                            secondary={`Quantity: ${product.quantity}`}\r\n                        />\r\n                        <Typography variant=\"body2\">\r\n                            {product.line_total.formatted_with_symbol}\r\n                        </Typography>\r\n                    </ListItem>\r\n                ))}\r\n                <ListItem style={{ padding: '10px 0' }}>\r\n                    <ListItemText primary=\"Total\" />\r\n                    <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\r\n                        {checkoutToken.live.subtotal.formatted_with_symbol}\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Review\r\n","import React from 'react'\r\nimport { Typography, Button, Divider } from '@material-ui/core'\r\nimport {\r\n    Elements,\r\n    CardElement,\r\n    ElementsConsumer,\r\n} from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\n\r\nimport Review from './Checkout/Review'\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY)\r\n\r\nconst PaymentForm = ({\r\n    checkoutToken,\r\n    shippingData,\r\n    backStep,\r\n    onCaptureCheckout,\r\n    nextStep,\r\n    timeout,\r\n}) => {\r\n    const handleSubmit = async (event, elements, stripe) => {\r\n        event.preventDefault()\r\n\r\n        if (!stripe || !elements) {\r\n            const cardElement = elements.getElement(CardElement)\r\n        }\r\n\r\n        const cardElement = elements.getElement(CardElement)\r\n\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: cardElement,\r\n        })\r\n\r\n        if (error) {\r\n            console.log(error)\r\n        } else {\r\n            const orderData = {\r\n                line_items: checkoutToken.live.line_items,\r\n                customer: {\r\n                    firstname: shippingData.firstName,\r\n                    lastname: shippingData.lastName,\r\n                    email: shippingData.email,\r\n                },\r\n                shipping: {\r\n                    name: 'Primary',\r\n                    street: shippingData.address1,\r\n                    town_city: shippingData.city,\r\n                    county_state: shippingData.shippingSubdivision,\r\n                    postal_zip_code: shippingData.zip,\r\n                    country: shippingData.shippingCountry,\r\n                },\r\n                fulfillment: { shipping_method: shippingData.shippingOption },\r\n                payment: {\r\n                    gateway: 'stripe',\r\n                    stripe: {\r\n                        payment_method_id: paymentMethod.id,\r\n                    },\r\n                },\r\n            }\r\n            onCaptureCheckout(checkoutToken.id, orderData)\r\n\r\n            timeout()\r\n            nextStep()\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Review checkoutToken={checkoutToken} />\r\n            <Divider />\r\n            <Typography variant='h6' gutterBottom style={{ margin: '20px 0' }}>\r\n                Payment Method\r\n            </Typography>\r\n            <Elements stripe={stripePromise}>\r\n                <ElementsConsumer>\r\n                    {({ elements, stripe }) => (\r\n                        <form\r\n                            onSubmit={(e) => handleSubmit(e, elements, stripe)}\r\n                        >\r\n                            <CardElement />\r\n                            <br /> <br />\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'space-between',\r\n                                }}\r\n                            >\r\n                                <Button variant='outline' onClick={backStep}>\r\n                                    Back\r\n                                </Button>\r\n                                <Button\r\n                                    type='submit'\r\n                                    variant='contained'\r\n                                    disabled={!stripe}\r\n                                    color='primary'\r\n                                >\r\n                                    Pay{' '}\r\n                                    {\r\n                                        checkoutToken.live.subtotal\r\n                                            .formatted_with_symbol\r\n                                    }\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                </ElementsConsumer>\r\n            </Elements>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Paper,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    Typography,\r\n    CircularProgress,\r\n    Divider,\r\n    Button,\r\n    CssBaseline,\r\n} from '@material-ui/core'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport { commerce } from '../../../lib/commerce'\r\n\r\nimport useStyles from './styles'\r\nimport AddressForm from '../AddressForm'\r\nimport PaymentForm from '../PaymentForm'\r\n\r\nconst steps = ['Shipping Address', 'Payment Details']\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n    const [activeStep, setActiveStep] = useState(0)\r\n    const [checkoutToken, setCheckoutToken] = useState(null)\r\n    const [shippingData, setShippingData] = useState({})\r\n    const [isFinished, setIsFinished] = useState(false)\r\n    const history = useHistory()\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, {\r\n                    type: 'cart',\r\n                })\r\n\r\n                setCheckoutToken(token)\r\n            } catch (error) {\r\n                history.push('/')\r\n            }\r\n        }\r\n\r\n        generateToken()\r\n    }, [cart])\r\n\r\n    const nextStep = () =>\r\n        setActiveStep((previousActiveStep) => previousActiveStep + 1)\r\n\r\n    const backStep = () =>\r\n        setActiveStep((previousActiveStep) => previousActiveStep - 1)\r\n\r\n    const next = (data) => {\r\n        setShippingData(data)\r\n        nextStep()\r\n    }\r\n\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n            setIsFinished(true)\r\n        }, 3000)\r\n    }\r\n\r\n    let Confirmation = () =>\r\n        order.customer ? (\r\n            <>\r\n                <div>\r\n                    <Typography variant='h5'>\r\n                        Thank you for your purchase, {order.customer.firstname}{' '}\r\n                        {order.customer.lastname}\r\n                    </Typography>\r\n                    <Divider className={classes.divider} />\r\n                    <Typography variant='subtitle2'>\r\n                        Order ref: {order.customer_reference}\r\n                    </Typography>\r\n                </div>\r\n                <br />\r\n                <Button\r\n                    component={Link}\r\n                    to='/'\r\n                    variant='outlined'\r\n                    type='button'\r\n                >\r\n                    Back to Home\r\n                </Button>\r\n            </>\r\n        ) : isFinished ? (\r\n            <>\r\n                <div>\r\n                    <Typography variant='h5'>\r\n                        Thank you for your purchase\r\n                    </Typography>\r\n                    <Divider className={classes.divider} />\r\n                </div>\r\n                <br />\r\n                <Button\r\n                    component={Link}\r\n                    to='/'\r\n                    variant='outlined'\r\n                    type='button'\r\n                >\r\n                    Back to Home\r\n                </Button>\r\n            </>\r\n        ) : (\r\n            <div className={classes.spinner}>\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n\r\n    // prettier-ignore\r\n    if (error) {\r\n        <>\r\n            <Typography variant='h5'>Error: {error}</Typography>\r\n            <br />\r\n            <Button component={Link} to='/' variant='outlined' type='button'>\r\n                Back to Home\r\n            </Button>\r\n        </>\r\n    }\r\n\r\n    const Form = () =>\r\n        activeStep === 0 ? (\r\n            <AddressForm checkoutToken={checkoutToken} next={next} />\r\n        ) : (\r\n            <PaymentForm\r\n                shippingData={shippingData}\r\n                checkoutToken={checkoutToken}\r\n                backStep={backStep}\r\n                onCaptureCheckout={onCaptureCheckout}\r\n                nextStep={nextStep}\r\n                timeout={timeout}\r\n            />\r\n        )\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant='h4' align='center'>\r\n                        Checkout\r\n                    </Typography>\r\n                    <Stepper\r\n                        activeStep={activeStep}\r\n                        className={classes.stepper}\r\n                    >\r\n                        {steps.map((step) => (\r\n                            <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? (\r\n                        <Confirmation />\r\n                    ) : (\r\n                        checkoutToken && <Form /> // only if checkoutToken is available => render form\r\n                    )}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","import React, { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport { commerce } from './lib/commerce'\r\n\r\nimport { Products, Navbar, Cart, Checkout } from './components/'\r\n\r\nimport video from './assets/comp1.mp4'\r\n\r\nconst App = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [cart, setCart] = useState({})\r\n    const [order, setOrder] = useState({})\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const fetchProducts = async () => {\r\n        const { data } = await commerce.products.list()\r\n\r\n        setProducts(data)\r\n    }\r\n\r\n    const fetchCart = async () => {\r\n        setCart(await commerce.cart.retrieve())\r\n    }\r\n\r\n    const handleAddToCart = async (productId, quantity) => {\r\n        const { cart } = await commerce.cart.add(productId, quantity)\r\n\r\n        setCart(cart)\r\n    }\r\n\r\n    const handleUpdateCartQuantity = async (productId, quantity) => {\r\n        const { cart } = await commerce.cart.update(productId, { quantity })\r\n\r\n        setCart(cart)\r\n    }\r\n\r\n    const handleRemoveFromCart = async (productId, quantity) => {\r\n        const { cart } = await commerce.cart.remove(productId)\r\n\r\n        setCart(cart)\r\n    }\r\n\r\n    const handleEmptyCart = async () => {\r\n        const { cart } = await commerce.cart.empty()\r\n\r\n        setCart(cart)\r\n    }\r\n\r\n    const refreshCart = async () => {\r\n        const newCart = await commerce.cart.refresh()\r\n\r\n        setCart(newCart)\r\n    }\r\n\r\n    const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\r\n        try {\r\n            const incomingOrder = await commerce.checkout.capture(\r\n                checkoutTokenId,\r\n                newOrder\r\n            )\r\n\r\n            setOrder(incomingOrder)\r\n            refreshCart()\r\n        } catch (error) {\r\n            setErrorMessage(error.data.error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProducts()\r\n        fetchCart()\r\n    }, [])\r\n\r\n    // console.log(cart)\r\n\r\n    // console.log(products)\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Navbar totalItems={cart.total_items} />\r\n\r\n                {/* <div style={{ outline: '5px dashed red', marginTop: '100px' }}>\r\n                    <video style={{ width: '100%' }} autoPlay muted>\r\n                        <source src={video} type='video/mp4' />\r\n                    </video>\r\n                </div> */}\r\n\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <Products\r\n                            products={products}\r\n                            onAddToCart={handleAddToCart}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path='/cart'>\r\n                        <Cart\r\n                            cart={cart}\r\n                            handleUpdateCartQuantity={handleUpdateCartQuantity}\r\n                            handleRemoveFromCart={handleRemoveFromCart}\r\n                            handleEmptyCart={handleEmptyCart}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path='/checkout'>\r\n                        <Checkout\r\n                            cart={cart}\r\n                            order={order}\r\n                            onCaptureCheckout={handleCaptureCheckout}\r\n                            error={errorMessage}\r\n                        />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","export default __webpack_public_path__ + \"static/media/comp1.b01c3a9c.mp4\";","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}